version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.7

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-conda-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-conda-dependencies-

      - run:
          name: install dependencies
          command: |
            if [ ! -d miniconda ]; then
              curl -fsSL https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh -o miniconda.sh
              bash miniconda.sh -b -p miniconda
              rm -f miniconda.sh
              source `pwd`/miniconda/etc/profile.d/conda.sh
              conda activate base
              conda config --set always_yes yes --set changeps1 no
              conda config --add channels defaults
              conda config --add channels conda-forge
              conda update -q conda
            fi

            source `pwd`/miniconda/etc/profile.d/conda.sh
            conda activate base
            conda config --set always_yes yes --set changeps1 no
            conda config --add channels defaults
            conda config --add channels conda-forge
            conda update -q conda

            conda install -y -q --file requirements.txt
            pip install --no-deps git+https://github.com/gbernstein/pixmappy.git
            conda install -y -q \
              flake8 \
              pytest
            conda update --all -y -q

      - save_cache:
          paths:
            - ./miniconda
          key: v1-conda-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: run tests
          no_output_timeout: 360m
          command: |
            source `pwd`/miniconda/etc/profile.d/conda.sh
            conda activate base

            pip install --no-deps --progress-bar=off --no-cache-dir --upgrade-strategy=eager --force-reinstall -r volatile-requirements.txt
            pip install -q --no-deps --progress-bar=off --no-cache-dir --force-reinstall .
            flake8 pizza_cutter
            flake8 bin

            git clone https://github.com/beckermr/des-y3-test-data.git
            export TEST_DESDATA=`pwd`/des-y3-test-data
            pytest -vvs pizza_cutter

workflows:
  version: 2
  build:
    jobs:
      - build
